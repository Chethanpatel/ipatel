{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ipatel \u00b6 A fast IP and ASN enrichment tool that works offline after initial database download. \ud83c\udf0d Enrich IPs with ASN, Country, and Owner \ud83d\udce6 Lookup ASN and its IP ranges \u26a1 CLI and Python API support \ud83d\ude80 Works offline after DB download \ud83d\udd01 Auto-detects stale DB and warns to update","title":"Home"},{"location":"#ipatel","text":"A fast IP and ASN enrichment tool that works offline after initial database download. \ud83c\udf0d Enrich IPs with ASN, Country, and Owner \ud83d\udce6 Lookup ASN and its IP ranges \u26a1 CLI and Python API support \ud83d\ude80 Works offline after DB download \ud83d\udd01 Auto-detects stale DB and warns to update","title":"ipatel"},{"location":"api/","text":"API \u00b6 ipatel is a lightweight Python library and CLI tool to enrich IP addresses and ASNs with: ASN (Autonomous System Number) Owner / AS Description Country Code IP Type (Public / Private / Invalid) IP Ranges associated with ASNs It works offline after downloading a one-time IP-to-ASN mapping database and offers both programmatic and command-line interfaces. 1. Enrich an IP Address \u00b6 1.1 Description \u00b6 Enrich a public IP address with detailed metadata including ASN, country, owner, and whether it is public or private. 1.2 API \u00b6 ipatel . enrich . enrich_ip ( ip : str ) -> dict 1.3 Example \u00b6 from ipatel.enrich import enrich_ip result = enrich_ip ( \"8.8.8.8\" ) print ( result ) Output: { \"ip\" : \"8.8.8.8\" , \"asn\" : 15169 , \"owner\" : \"GOOGLE\" , \"country_code\" : \"US\" , \"type\" : \"public\" } 2. Get Raw ASN Record \u00b6 2.1 Description \u00b6 Fetch the raw record for an IP from the IP-to-ASN database. 2.2 API \u00b6 ipatel . asn . get_record ( ip : str ) -> dict 2.3 Example \u00b6 from ipatel.asn import get_record record = get_record ( \"8.8.8.8\" ) print ( record ) Output: { \"asn\" : 15169 , \"country_code\" : \"US\" , \"owner\" : \"GOOGLE\" } 3. Get ASN Number \u00b6 3.1 Description \u00b6 Return the ASN number for a given IP address. 3.2 API \u00b6 ipatel . asn . get_asn ( ip : str ) -> int | None 3.3 Example \u00b6 from ipatel.asn import get_asn get_asn ( \"8.8.8.8\" ) # \u279c 15169 4. Get Country Code \u00b6 4.1 Description \u00b6 Returns the 2-letter ISO country code for a given IP address. 4.2 API \u00b6 ipatel . asn . get_country_code ( ip : str ) -> str | None 4.3 Example \u00b6 from ipatel.asn import get_country_code get_country_code ( \"8.8.8.8\" ) # \u279c 'US' 5. Get Owner / AS Description \u00b6 5.1 Description \u00b6 Return the organization or description (owner) of the ASN associated with an IP. 5.2 API \u00b6 ipatel . asn . get_owner ( ip : str ) -> str 5.3 Example \u00b6 from ipatel.asn import get_owner get_owner ( \"8.8.8.8\" ) # \u279c 'GOOGLE' 6. Get IP Ranges for ASN \u00b6 6.1 Description \u00b6 Given an ASN, return: ASN number Owner Country code All IP ranges associated with that ASN 6.2 API \u00b6 ipatel . asn . get_ip_ranges_for_asn ( asn : int ) -> dict 6.3 Example \u00b6 from ipatel.asn import get_ip_ranges_for_asn info = get_ip_ranges_for_asn ( 15169 ) print ( info ) Output: { \"asn\" : 15169 , \"owner\" : \"GOOGLE\" , \"country_code\" : \"US\" , \"ip_ranges\" : [ ( \"8.8.4.0\" , \"8.8.4.255\" ), ( \"8.8.8.0\" , \"8.8.8.255\" ), ... ] } 7. Force Download Database \u00b6 7.1 Description \u00b6 Manually download the latest IP-to-ASN database from iptoasn.com . This is usually handled automatically. 7.2 API \u00b6 ipatel . asn . download_ip2asn_db () -> None 7.3 Example \u00b6 from ipatel.asn import download_ip2asn_db download_ip2asn_db () 8. Ensure Local Database is Fresh \u00b6 8.1 Description \u00b6 Check if the local database is fresh (within 7 days); otherwise, trigger a warning or update. 8.2 API \u00b6 ipatel . asn . ensure_ip2asn_db () -> None 9. Command Line Interface (CLI) \u00b6 9.1 Description \u00b6 After installation, use ipatel from your terminal to enrich IPs or fetch ASN data. 9.2 Commands \u00b6 ipatel -i 1 .1.1.1 # Enrich an IP ipatel -a 15169 # Lookup ASN details ipatel --update-db # Manually update the database ipatel --version # Show current version ipatel -h # Show help and usage 10. Dependencies \u00b6 10.1 Required \u00b6 rich \u2014 Beautiful CLI formatting argparse \u2014 Command-line parser Standard library: pathlib ipaddress urllib gzip shutil","title":"Python API Reference"},{"location":"api/#api","text":"ipatel is a lightweight Python library and CLI tool to enrich IP addresses and ASNs with: ASN (Autonomous System Number) Owner / AS Description Country Code IP Type (Public / Private / Invalid) IP Ranges associated with ASNs It works offline after downloading a one-time IP-to-ASN mapping database and offers both programmatic and command-line interfaces.","title":"API"},{"location":"api/#1-enrich-an-ip-address","text":"","title":"1. Enrich an IP Address"},{"location":"api/#11-description","text":"Enrich a public IP address with detailed metadata including ASN, country, owner, and whether it is public or private.","title":"1.1 Description"},{"location":"api/#12-api","text":"ipatel . enrich . enrich_ip ( ip : str ) -> dict","title":"1.2 API"},{"location":"api/#13-example","text":"from ipatel.enrich import enrich_ip result = enrich_ip ( \"8.8.8.8\" ) print ( result ) Output: { \"ip\" : \"8.8.8.8\" , \"asn\" : 15169 , \"owner\" : \"GOOGLE\" , \"country_code\" : \"US\" , \"type\" : \"public\" }","title":"1.3 Example"},{"location":"api/#2-get-raw-asn-record","text":"","title":"2. Get Raw ASN Record"},{"location":"api/#21-description","text":"Fetch the raw record for an IP from the IP-to-ASN database.","title":"2.1 Description"},{"location":"api/#22-api","text":"ipatel . asn . get_record ( ip : str ) -> dict","title":"2.2 API"},{"location":"api/#23-example","text":"from ipatel.asn import get_record record = get_record ( \"8.8.8.8\" ) print ( record ) Output: { \"asn\" : 15169 , \"country_code\" : \"US\" , \"owner\" : \"GOOGLE\" }","title":"2.3 Example"},{"location":"api/#3-get-asn-number","text":"","title":"3. Get ASN Number"},{"location":"api/#31-description","text":"Return the ASN number for a given IP address.","title":"3.1 Description"},{"location":"api/#32-api","text":"ipatel . asn . get_asn ( ip : str ) -> int | None","title":"3.2 API"},{"location":"api/#33-example","text":"from ipatel.asn import get_asn get_asn ( \"8.8.8.8\" ) # \u279c 15169","title":"3.3 Example"},{"location":"api/#4-get-country-code","text":"","title":"4. Get Country Code"},{"location":"api/#41-description","text":"Returns the 2-letter ISO country code for a given IP address.","title":"4.1 Description"},{"location":"api/#42-api","text":"ipatel . asn . get_country_code ( ip : str ) -> str | None","title":"4.2 API"},{"location":"api/#43-example","text":"from ipatel.asn import get_country_code get_country_code ( \"8.8.8.8\" ) # \u279c 'US'","title":"4.3 Example"},{"location":"api/#5-get-owner-as-description","text":"","title":"5. Get Owner / AS Description"},{"location":"api/#51-description","text":"Return the organization or description (owner) of the ASN associated with an IP.","title":"5.1 Description"},{"location":"api/#52-api","text":"ipatel . asn . get_owner ( ip : str ) -> str","title":"5.2 API"},{"location":"api/#53-example","text":"from ipatel.asn import get_owner get_owner ( \"8.8.8.8\" ) # \u279c 'GOOGLE'","title":"5.3 Example"},{"location":"api/#6-get-ip-ranges-for-asn","text":"","title":"6. Get IP Ranges for ASN"},{"location":"api/#61-description","text":"Given an ASN, return: ASN number Owner Country code All IP ranges associated with that ASN","title":"6.1 Description"},{"location":"api/#62-api","text":"ipatel . asn . get_ip_ranges_for_asn ( asn : int ) -> dict","title":"6.2 API"},{"location":"api/#63-example","text":"from ipatel.asn import get_ip_ranges_for_asn info = get_ip_ranges_for_asn ( 15169 ) print ( info ) Output: { \"asn\" : 15169 , \"owner\" : \"GOOGLE\" , \"country_code\" : \"US\" , \"ip_ranges\" : [ ( \"8.8.4.0\" , \"8.8.4.255\" ), ( \"8.8.8.0\" , \"8.8.8.255\" ), ... ] }","title":"6.3 Example"},{"location":"api/#7-force-download-database","text":"","title":"7. Force Download Database"},{"location":"api/#71-description","text":"Manually download the latest IP-to-ASN database from iptoasn.com . This is usually handled automatically.","title":"7.1 Description"},{"location":"api/#72-api","text":"ipatel . asn . download_ip2asn_db () -> None","title":"7.2 API"},{"location":"api/#73-example","text":"from ipatel.asn import download_ip2asn_db download_ip2asn_db ()","title":"7.3 Example"},{"location":"api/#8-ensure-local-database-is-fresh","text":"","title":"8. Ensure Local Database is Fresh"},{"location":"api/#81-description","text":"Check if the local database is fresh (within 7 days); otherwise, trigger a warning or update.","title":"8.1 Description"},{"location":"api/#82-api","text":"ipatel . asn . ensure_ip2asn_db () -> None","title":"8.2 API"},{"location":"api/#9-command-line-interface-cli","text":"","title":"9. Command Line Interface (CLI)"},{"location":"api/#91-description","text":"After installation, use ipatel from your terminal to enrich IPs or fetch ASN data.","title":"9.1 Description"},{"location":"api/#92-commands","text":"ipatel -i 1 .1.1.1 # Enrich an IP ipatel -a 15169 # Lookup ASN details ipatel --update-db # Manually update the database ipatel --version # Show current version ipatel -h # Show help and usage","title":"9.2 Commands"},{"location":"api/#10-dependencies","text":"","title":"10. Dependencies"},{"location":"api/#101-required","text":"rich \u2014 Beautiful CLI formatting argparse \u2014 Command-line parser Standard library: pathlib ipaddress urllib gzip shutil","title":"10.1 Required"},{"location":"cli/","text":"CLI \u00b6 ipatel includes a built-in CLI tool that allows you to enrich IPs and fetch ASN data directly from the terminal. 11. Command Line Interface (CLI) \u00b6 11.1 Basic Syntax \u00b6 ipatel [ -i IP_ADDRESS ] [ -a ASN ] [ --update-db ] [ --version ] [ -h ] 11.2 Available Flags \u00b6 Flag Description -i , --ip Enrich the given IP address. -a , --asn Lookup IP ranges for the given ASN. --update-db Force re-download of the DB. --version Show the installed version. -h , --help Show usage and help message. 11.3 Example Commands \u00b6 11.3.1 Enrich an IP Address \u00b6 ipatel -i 8 .8.8.8 Returns: IP : 8.8.8.8 ASN : 15169 Owner : GOOGLE Country : US Type : public 11.3.2 Lookup ASN Information \u00b6 ipatel -a 15169 Returns: ASN : 15169 Owner : GOOGLE Country : US IP Ranges: - 8.8.4.0 - 8.8.4.255 - 8.8.8.0 - 8.8.8.255 ... 11.3.3 Manually Update the Database \u00b6 ipatel --update-db Downloads the latest IP-to-ASN dataset and replaces the local cache. 11.3.4 Show Current Version \u00b6 ipatel --version Prints the installed version of ipatel . 11.4 Database Management \u00b6 11.4.1 Offline Usage \u00b6 The tool uses a local database ( ip2asn-v4.tsv ) fetched from iptoasn.com , enabling fully offline lookups after the initial download. 11.4.2 Auto-Download Behavior \u00b6 When ipatel is used for the first time, it automatically downloads the latest IP-to-ASN dataset. If the local copy is older than 7 days , a prompt is shown to refresh. 11.4.3 Manual Refresh \u00b6 You can also force an update manually: ipatel --update-db This will: Download the latest ip2asn-v4.tsv.gz Extract it Replace the outdated local copy 11.5 Programmatic Update (Advanced) \u00b6 For advanced use cases or library integration, update the database manually via code: from ipatel.asn import download_ip2asn_db download_ip2asn_db () 11.6 Contribution & Support \u00b6 For issues, feature requests, or contributions: \ud83c\udf10 GitHub Repository","title":"CLI Usage"},{"location":"cli/#cli","text":"ipatel includes a built-in CLI tool that allows you to enrich IPs and fetch ASN data directly from the terminal.","title":"CLI"},{"location":"cli/#11-command-line-interface-cli","text":"","title":"11. Command Line Interface (CLI)"},{"location":"cli/#111-basic-syntax","text":"ipatel [ -i IP_ADDRESS ] [ -a ASN ] [ --update-db ] [ --version ] [ -h ]","title":"11.1 Basic Syntax"},{"location":"cli/#112-available-flags","text":"Flag Description -i , --ip Enrich the given IP address. -a , --asn Lookup IP ranges for the given ASN. --update-db Force re-download of the DB. --version Show the installed version. -h , --help Show usage and help message.","title":"11.2 Available Flags"},{"location":"cli/#113-example-commands","text":"","title":"11.3 Example Commands"},{"location":"cli/#1131-enrich-an-ip-address","text":"ipatel -i 8 .8.8.8 Returns: IP : 8.8.8.8 ASN : 15169 Owner : GOOGLE Country : US Type : public","title":"11.3.1 Enrich an IP Address"},{"location":"cli/#1132-lookup-asn-information","text":"ipatel -a 15169 Returns: ASN : 15169 Owner : GOOGLE Country : US IP Ranges: - 8.8.4.0 - 8.8.4.255 - 8.8.8.0 - 8.8.8.255 ...","title":"11.3.2 Lookup ASN Information"},{"location":"cli/#1133-manually-update-the-database","text":"ipatel --update-db Downloads the latest IP-to-ASN dataset and replaces the local cache.","title":"11.3.3 Manually Update the Database"},{"location":"cli/#1134-show-current-version","text":"ipatel --version Prints the installed version of ipatel .","title":"11.3.4 Show Current Version"},{"location":"cli/#114-database-management","text":"","title":"11.4 Database Management"},{"location":"cli/#1141-offline-usage","text":"The tool uses a local database ( ip2asn-v4.tsv ) fetched from iptoasn.com , enabling fully offline lookups after the initial download.","title":"11.4.1 Offline Usage"},{"location":"cli/#1142-auto-download-behavior","text":"When ipatel is used for the first time, it automatically downloads the latest IP-to-ASN dataset. If the local copy is older than 7 days , a prompt is shown to refresh.","title":"11.4.2 Auto-Download Behavior"},{"location":"cli/#1143-manual-refresh","text":"You can also force an update manually: ipatel --update-db This will: Download the latest ip2asn-v4.tsv.gz Extract it Replace the outdated local copy","title":"11.4.3 Manual Refresh"},{"location":"cli/#115-programmatic-update-advanced","text":"For advanced use cases or library integration, update the database manually via code: from ipatel.asn import download_ip2asn_db download_ip2asn_db ()","title":"11.5 Programmatic Update (Advanced)"},{"location":"cli/#116-contribution-support","text":"For issues, feature requests, or contributions: \ud83c\udf10 GitHub Repository","title":"11.6 Contribution &amp; Support"},{"location":"quickstart/","text":"Perfect \u2014 here's a documentation-style Quickstart Guide in Markdown that you can include in your docs (e.g., mydocs/quickstart.md ) and link from your sidebar. \ud83d\udcc4 quickstart.md \u00b6 # \ud83d\ude80 Quickstart Guide Welcome to **IPATEL** \u2014 a fast and lightweight IP enrichment library. This guide shows how to quickly get started with importing the library and using all core functions. --- ## \ud83d\udce6 Installation ```bash pip install ipatel \u2728 Basic Usage \u00b6 import ipatel as ip # Sample test inputs test_ip = \"8.8.8.8\" test_asn = 15169 \ud83d\udd0d IP Enrichment \u00b6 Enrich an IP address with all available fields: \u00b6 ip . enrich_ip ( test_ip ) Returns: { 'ip' : '8.8.8.8' , 'asn' : 15169 , 'country_code' : 'US' , 'owner' : 'GOOGLE' , 'ip_type' : 'Public' } \ud83e\udde0 ASN Lookups \u00b6 Get ASN record (raw dict): \u00b6 ip . get_record ( test_ip ) Get ASN number: \u00b6 ip . get_asn ( test_ip ) # \u279d 15169 Get country code: \u00b6 ip . get_country_code ( test_ip ) # \u279d \"US\" Get AS owner/organization: \u00b6 ip . get_owner ( test_ip ) # \u279d \"GOOGLE\" Get all IP ranges owned by an ASN: \u00b6 ip . get_ip_ranges_for_asn ( test_asn ) \ud83d\udee0\ufe0f Utilities \u00b6 Convert IP to integer: \u00b6 ip . ip_to_int ( \"8.8.8.8\" ) # \u279d 134744072 Convert integer to IP: \u00b6 ip . int_to_ip ( 134744072 ) # \u279d \"8.8.8.8\" Detect IP type (public/private/reserved): \u00b6 ip . get_ip_type ( \"127.0.0.1\" ) # \u279d \"Loopback\" \ud83d\udd04 Database Handling \u00b6 Download the latest IP-to-ASN database: \u00b6 ip . download_ip2asn_db () Ensure local DB is fresh: \u00b6 ip . ensure_ip2asn_db () \ud83e\uddea Full Test Script \u00b6 You can try this all together: def run_tests (): ip . ensure_ip2asn_db () print ( ip . enrich_ip ( \"8.8.8.8\" )) if __name__ == \"__main__\" : run_tests () \ud83d\udcdd Notes \u00b6 All functions are safe for both IPv4 and IPv6 inputs. Private, reserved, and loopback IPs are handled gracefully. \ud83d\udcda See Also \u00b6 CLI Usage Detailed API DB Upadte Project Repo ````","title":"Quickstart"},{"location":"quickstart/#quickstartmd","text":"# \ud83d\ude80 Quickstart Guide Welcome to **IPATEL** \u2014 a fast and lightweight IP enrichment library. This guide shows how to quickly get started with importing the library and using all core functions. --- ## \ud83d\udce6 Installation ```bash pip install ipatel","title":"\ud83d\udcc4 quickstart.md"},{"location":"quickstart/#basic-usage","text":"import ipatel as ip # Sample test inputs test_ip = \"8.8.8.8\" test_asn = 15169","title":"\u2728 Basic Usage"},{"location":"quickstart/#ip-enrichment","text":"","title":"\ud83d\udd0d IP Enrichment"},{"location":"quickstart/#enrich-an-ip-address-with-all-available-fields","text":"ip . enrich_ip ( test_ip ) Returns: { 'ip' : '8.8.8.8' , 'asn' : 15169 , 'country_code' : 'US' , 'owner' : 'GOOGLE' , 'ip_type' : 'Public' }","title":"Enrich an IP address with all available fields:"},{"location":"quickstart/#asn-lookups","text":"","title":"\ud83e\udde0 ASN Lookups"},{"location":"quickstart/#get-asn-record-raw-dict","text":"ip . get_record ( test_ip )","title":"Get ASN record (raw dict):"},{"location":"quickstart/#get-asn-number","text":"ip . get_asn ( test_ip ) # \u279d 15169","title":"Get ASN number:"},{"location":"quickstart/#get-country-code","text":"ip . get_country_code ( test_ip ) # \u279d \"US\"","title":"Get country code:"},{"location":"quickstart/#get-as-ownerorganization","text":"ip . get_owner ( test_ip ) # \u279d \"GOOGLE\"","title":"Get AS owner/organization:"},{"location":"quickstart/#get-all-ip-ranges-owned-by-an-asn","text":"ip . get_ip_ranges_for_asn ( test_asn )","title":"Get all IP ranges owned by an ASN:"},{"location":"quickstart/#utilities","text":"","title":"\ud83d\udee0\ufe0f Utilities"},{"location":"quickstart/#convert-ip-to-integer","text":"ip . ip_to_int ( \"8.8.8.8\" ) # \u279d 134744072","title":"Convert IP to integer:"},{"location":"quickstart/#convert-integer-to-ip","text":"ip . int_to_ip ( 134744072 ) # \u279d \"8.8.8.8\"","title":"Convert integer to IP:"},{"location":"quickstart/#detect-ip-type-publicprivatereserved","text":"ip . get_ip_type ( \"127.0.0.1\" ) # \u279d \"Loopback\"","title":"Detect IP type (public/private/reserved):"},{"location":"quickstart/#database-handling","text":"","title":"\ud83d\udd04 Database Handling"},{"location":"quickstart/#download-the-latest-ip-to-asn-database","text":"ip . download_ip2asn_db ()","title":"Download the latest IP-to-ASN database:"},{"location":"quickstart/#ensure-local-db-is-fresh","text":"ip . ensure_ip2asn_db ()","title":"Ensure local DB is fresh:"},{"location":"quickstart/#full-test-script","text":"You can try this all together: def run_tests (): ip . ensure_ip2asn_db () print ( ip . enrich_ip ( \"8.8.8.8\" )) if __name__ == \"__main__\" : run_tests ()","title":"\ud83e\uddea Full Test Script"},{"location":"quickstart/#notes","text":"All functions are safe for both IPv4 and IPv6 inputs. Private, reserved, and loopback IPs are handled gracefully.","title":"\ud83d\udcdd Notes"},{"location":"quickstart/#see-also","text":"CLI Usage Detailed API DB Upadte Project Repo ````","title":"\ud83d\udcda See Also"},{"location":"update/","text":"Updating the Database \u00b6 ipatel relies on a local copy of the IP-to-ASN database to provide fast and offline enrichment. This section describes how the database is managed and how you can update it manually or programmatically. 1. Why Update the Database? \u00b6 The IP-to-ASN mapping data changes frequently as networks evolve. Keeping the local database updated ensures that: Enrichment results are accurate New ASN allocations and IP ranges are recognized Country and ownership info remains current 2. One-Time Auto Download \u00b6 When you run any ipatel command for the first time , it will automatically: Download the latest ip2asn-v4.tsv.gz file from iptoasn.com Extract and cache it locally for fast lookups No action is needed on your part during first use. 3. Manual Update (Recommended Weekly) \u00b6 You can manually refresh the database anytime using the CLI: 3.1 Command \u00b6 ipatel --update-db 3.2 What It Does \u00b6 Downloads the latest compressed TSV file Extracts and stores it in the local cache directory Overwrites the previous database copy 4. Auto-Refresh Logic \u00b6 On every usage, ipatel checks: If the local database exists If the file is older than 7 days If the data is outdated, a warning will be printed suggesting you to run: ipatel --update-db This helps you stay current without automatic background downloads. 5. Programmatic Update (Advanced) \u00b6 You can also trigger a database update from Python code. 5.1 Code Snippet \u00b6 from ipatel.asn import download_ip2asn_db download_ip2asn_db () This is useful when integrating into scripts or scheduled jobs (e.g., cron). 6. Where is the DB Stored? \u00b6 The database is stored locally in a cache directory like: ~/.cache/ipatel/ip2asn-v4.tsv You do not need to manage this path manually unless doing advanced customizations. 7. Troubleshooting \u00b6 If download fails, check your internet connection. You can delete the cache file to force a fresh download. If ipatel doesn't recognize an IP, it's possible the DB is outdated \u2014 try updating it. 8. Source of Data \u00b6 The IP-to-ASN data is freely provided by: \ud83c\udf10 iptoasn.com It is redistributed and used locally for enrichment, with no external calls after download.","title":"Updating the Database"},{"location":"update/#updating-the-database","text":"ipatel relies on a local copy of the IP-to-ASN database to provide fast and offline enrichment. This section describes how the database is managed and how you can update it manually or programmatically.","title":"Updating the Database"},{"location":"update/#1-why-update-the-database","text":"The IP-to-ASN mapping data changes frequently as networks evolve. Keeping the local database updated ensures that: Enrichment results are accurate New ASN allocations and IP ranges are recognized Country and ownership info remains current","title":"1. Why Update the Database?"},{"location":"update/#2-one-time-auto-download","text":"When you run any ipatel command for the first time , it will automatically: Download the latest ip2asn-v4.tsv.gz file from iptoasn.com Extract and cache it locally for fast lookups No action is needed on your part during first use.","title":"2. One-Time Auto Download"},{"location":"update/#3-manual-update-recommended-weekly","text":"You can manually refresh the database anytime using the CLI:","title":"3. Manual Update (Recommended Weekly)"},{"location":"update/#31-command","text":"ipatel --update-db","title":"3.1 Command"},{"location":"update/#32-what-it-does","text":"Downloads the latest compressed TSV file Extracts and stores it in the local cache directory Overwrites the previous database copy","title":"3.2 What It Does"},{"location":"update/#4-auto-refresh-logic","text":"On every usage, ipatel checks: If the local database exists If the file is older than 7 days If the data is outdated, a warning will be printed suggesting you to run: ipatel --update-db This helps you stay current without automatic background downloads.","title":"4. Auto-Refresh Logic"},{"location":"update/#5-programmatic-update-advanced","text":"You can also trigger a database update from Python code.","title":"5. Programmatic Update (Advanced)"},{"location":"update/#51-code-snippet","text":"from ipatel.asn import download_ip2asn_db download_ip2asn_db () This is useful when integrating into scripts or scheduled jobs (e.g., cron).","title":"5.1 Code Snippet"},{"location":"update/#6-where-is-the-db-stored","text":"The database is stored locally in a cache directory like: ~/.cache/ipatel/ip2asn-v4.tsv You do not need to manage this path manually unless doing advanced customizations.","title":"6. Where is the DB Stored?"},{"location":"update/#7-troubleshooting","text":"If download fails, check your internet connection. You can delete the cache file to force a fresh download. If ipatel doesn't recognize an IP, it's possible the DB is outdated \u2014 try updating it.","title":"7. Troubleshooting"},{"location":"update/#8-source-of-data","text":"The IP-to-ASN data is freely provided by: \ud83c\udf10 iptoasn.com It is redistributed and used locally for enrichment, with no external calls after download.","title":"8. Source of Data"}]}