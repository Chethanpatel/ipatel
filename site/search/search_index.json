{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ipenrich \u00b6 A fast IP and ASN enrichment tool that works offline after initial database download. \ud83c\udf0d Enrich IPs with ASN, Country, and Owner \ud83d\udce6 Lookup ASN and its IP ranges \u26a1 CLI and Python API support \ud83d\ude80 Works offline after DB download \ud83d\udd01 Auto-detects stale DB and warns to update","title":"ipenrich"},{"location":"#ipenrich","text":"A fast IP and ASN enrichment tool that works offline after initial database download. \ud83c\udf0d Enrich IPs with ASN, Country, and Owner \ud83d\udce6 Lookup ASN and its IP ranges \u26a1 CLI and Python API support \ud83d\ude80 Works offline after DB download \ud83d\udd01 Auto-detects stale DB and warns to update","title":"ipenrich"},{"location":"api/","text":"API \u00b6 ipenrich is a lightweight Python library and CLI tool to enrich IP addresses and ASNs with: ASN (Autonomous System Number) Owner / AS Description Country Code IP Type (Public / Private / Invalid) IP Ranges associated with ASNs It works offline after downloading a one-time IP-to-ASN mapping database and offers both programmatic and command-line interfaces. 1. Enrich an IP Address \u00b6 1.1 Description \u00b6 Enrich a public IP address with detailed metadata including ASN, country, owner, and whether it is public or private. 1.2 API \u00b6 ipenrich . enrich . enrich_ip ( ip : str ) -> dict 1.3 Example \u00b6 from ipenrich.enrich import enrich_ip result = enrich_ip ( \"8.8.8.8\" ) print ( result ) Output: { \"ip\" : \"8.8.8.8\" , \"asn\" : 15169 , \"owner\" : \"GOOGLE\" , \"country_code\" : \"US\" , \"type\" : \"public\" } 2. Get Raw ASN Record \u00b6 2.1 Description \u00b6 Fetch the raw record for an IP from the IP-to-ASN database. 2.2 API \u00b6 ipenrich . asn . get_record ( ip : str ) -> dict 2.3 Example \u00b6 from ipenrich.asn import get_record record = get_record ( \"8.8.8.8\" ) print ( record ) Output: { \"asn\" : 15169 , \"country_code\" : \"US\" , \"owner\" : \"GOOGLE\" } 3. Get ASN Number \u00b6 3.1 Description \u00b6 Return the ASN number for a given IP address. 3.2 API \u00b6 ipenrich . asn . get_asn ( ip : str ) -> int | None 3.3 Example \u00b6 from ipenrich.asn import get_asn get_asn ( \"8.8.8.8\" ) # \u279c 15169 4. Get Country Code \u00b6 4.1 Description \u00b6 Returns the 2-letter ISO country code for a given IP address. 4.2 API \u00b6 ipenrich . asn . get_country_code ( ip : str ) -> str | None 4.3 Example \u00b6 from ipenrich.asn import get_country_code get_country_code ( \"8.8.8.8\" ) # \u279c 'US' 5. Get Owner / AS Description \u00b6 5.1 Description \u00b6 Return the organization or description (owner) of the ASN associated with an IP. 5.2 API \u00b6 ipenrich . asn . get_owner ( ip : str ) -> str 5.3 Example \u00b6 from ipenrich.asn import get_owner get_owner ( \"8.8.8.8\" ) # \u279c 'GOOGLE' 6. Get IP Ranges for ASN \u00b6 6.1 Description \u00b6 Given an ASN, return: ASN number Owner Country code All IP ranges associated with that ASN 6.2 API \u00b6 ipenrich . asn . get_ip_ranges_for_asn ( asn : int ) -> dict 6.3 Example \u00b6 from ipenrich.asn import get_ip_ranges_for_asn info = get_ip_ranges_for_asn ( 15169 ) print ( info ) Output: { \"asn\" : 15169 , \"owner\" : \"GOOGLE\" , \"country_code\" : \"US\" , \"ip_ranges\" : [ ( \"8.8.4.0\" , \"8.8.4.255\" ), ( \"8.8.8.0\" , \"8.8.8.255\" ), ... ] } 7. Force Download Database \u00b6 7.1 Description \u00b6 Manually download the latest IP-to-ASN database from iptoasn.com . This is usually handled automatically. 7.2 API \u00b6 ipenrich . asn . download_ip2asn_db () -> None 7.3 Example \u00b6 from ipenrich.asn import download_ip2asn_db download_ip2asn_db () 8. Ensure Local Database is Fresh \u00b6 8.1 Description \u00b6 Check if the local database is fresh (within 7 days); otherwise, trigger a warning or update. 8.2 API \u00b6 ipenrich . asn . ensure_ip2asn_db () -> None 9. Command Line Interface (CLI) \u00b6 9.1 Description \u00b6 After installation, use ipenrich from your terminal to enrich IPs or fetch ASN data. 9.2 Commands \u00b6 ipenrich -i 1 .1.1.1 # Enrich an IP ipenrich -a 15169 # Lookup ASN details ipenrich --update-db # Manually update the database ipenrich --version # Show current version ipenrich -h # Show help and usage 10. Dependencies \u00b6 10.1 Required \u00b6 rich \u2014 Beautiful CLI formatting argparse \u2014 Command-line parser Standard library: pathlib ipaddress urllib gzip shutil","title":"API"},{"location":"api/#api","text":"ipenrich is a lightweight Python library and CLI tool to enrich IP addresses and ASNs with: ASN (Autonomous System Number) Owner / AS Description Country Code IP Type (Public / Private / Invalid) IP Ranges associated with ASNs It works offline after downloading a one-time IP-to-ASN mapping database and offers both programmatic and command-line interfaces.","title":"API"},{"location":"api/#1-enrich-an-ip-address","text":"","title":"1. Enrich an IP Address"},{"location":"api/#11-description","text":"Enrich a public IP address with detailed metadata including ASN, country, owner, and whether it is public or private.","title":"1.1 Description"},{"location":"api/#12-api","text":"ipenrich . enrich . enrich_ip ( ip : str ) -> dict","title":"1.2 API"},{"location":"api/#13-example","text":"from ipenrich.enrich import enrich_ip result = enrich_ip ( \"8.8.8.8\" ) print ( result ) Output: { \"ip\" : \"8.8.8.8\" , \"asn\" : 15169 , \"owner\" : \"GOOGLE\" , \"country_code\" : \"US\" , \"type\" : \"public\" }","title":"1.3 Example"},{"location":"api/#2-get-raw-asn-record","text":"","title":"2. Get Raw ASN Record"},{"location":"api/#21-description","text":"Fetch the raw record for an IP from the IP-to-ASN database.","title":"2.1 Description"},{"location":"api/#22-api","text":"ipenrich . asn . get_record ( ip : str ) -> dict","title":"2.2 API"},{"location":"api/#23-example","text":"from ipenrich.asn import get_record record = get_record ( \"8.8.8.8\" ) print ( record ) Output: { \"asn\" : 15169 , \"country_code\" : \"US\" , \"owner\" : \"GOOGLE\" }","title":"2.3 Example"},{"location":"api/#3-get-asn-number","text":"","title":"3. Get ASN Number"},{"location":"api/#31-description","text":"Return the ASN number for a given IP address.","title":"3.1 Description"},{"location":"api/#32-api","text":"ipenrich . asn . get_asn ( ip : str ) -> int | None","title":"3.2 API"},{"location":"api/#33-example","text":"from ipenrich.asn import get_asn get_asn ( \"8.8.8.8\" ) # \u279c 15169","title":"3.3 Example"},{"location":"api/#4-get-country-code","text":"","title":"4. Get Country Code"},{"location":"api/#41-description","text":"Returns the 2-letter ISO country code for a given IP address.","title":"4.1 Description"},{"location":"api/#42-api","text":"ipenrich . asn . get_country_code ( ip : str ) -> str | None","title":"4.2 API"},{"location":"api/#43-example","text":"from ipenrich.asn import get_country_code get_country_code ( \"8.8.8.8\" ) # \u279c 'US'","title":"4.3 Example"},{"location":"api/#5-get-owner-as-description","text":"","title":"5. Get Owner / AS Description"},{"location":"api/#51-description","text":"Return the organization or description (owner) of the ASN associated with an IP.","title":"5.1 Description"},{"location":"api/#52-api","text":"ipenrich . asn . get_owner ( ip : str ) -> str","title":"5.2 API"},{"location":"api/#53-example","text":"from ipenrich.asn import get_owner get_owner ( \"8.8.8.8\" ) # \u279c 'GOOGLE'","title":"5.3 Example"},{"location":"api/#6-get-ip-ranges-for-asn","text":"","title":"6. Get IP Ranges for ASN"},{"location":"api/#61-description","text":"Given an ASN, return: ASN number Owner Country code All IP ranges associated with that ASN","title":"6.1 Description"},{"location":"api/#62-api","text":"ipenrich . asn . get_ip_ranges_for_asn ( asn : int ) -> dict","title":"6.2 API"},{"location":"api/#63-example","text":"from ipenrich.asn import get_ip_ranges_for_asn info = get_ip_ranges_for_asn ( 15169 ) print ( info ) Output: { \"asn\" : 15169 , \"owner\" : \"GOOGLE\" , \"country_code\" : \"US\" , \"ip_ranges\" : [ ( \"8.8.4.0\" , \"8.8.4.255\" ), ( \"8.8.8.0\" , \"8.8.8.255\" ), ... ] }","title":"6.3 Example"},{"location":"api/#7-force-download-database","text":"","title":"7. Force Download Database"},{"location":"api/#71-description","text":"Manually download the latest IP-to-ASN database from iptoasn.com . This is usually handled automatically.","title":"7.1 Description"},{"location":"api/#72-api","text":"ipenrich . asn . download_ip2asn_db () -> None","title":"7.2 API"},{"location":"api/#73-example","text":"from ipenrich.asn import download_ip2asn_db download_ip2asn_db ()","title":"7.3 Example"},{"location":"api/#8-ensure-local-database-is-fresh","text":"","title":"8. Ensure Local Database is Fresh"},{"location":"api/#81-description","text":"Check if the local database is fresh (within 7 days); otherwise, trigger a warning or update.","title":"8.1 Description"},{"location":"api/#82-api","text":"ipenrich . asn . ensure_ip2asn_db () -> None","title":"8.2 API"},{"location":"api/#9-command-line-interface-cli","text":"","title":"9. Command Line Interface (CLI)"},{"location":"api/#91-description","text":"After installation, use ipenrich from your terminal to enrich IPs or fetch ASN data.","title":"9.1 Description"},{"location":"api/#92-commands","text":"ipenrich -i 1 .1.1.1 # Enrich an IP ipenrich -a 15169 # Lookup ASN details ipenrich --update-db # Manually update the database ipenrich --version # Show current version ipenrich -h # Show help and usage","title":"9.2 Commands"},{"location":"api/#10-dependencies","text":"","title":"10. Dependencies"},{"location":"api/#101-required","text":"rich \u2014 Beautiful CLI formatting argparse \u2014 Command-line parser Standard library: pathlib ipaddress urllib gzip shutil","title":"10.1 Required"},{"location":"cli/","text":"CLI \u00b6 ipenrich includes a built-in CLI tool that allows you to enrich IPs and fetch ASN data directly from the terminal. 11. Command Line Interface (CLI) \u00b6 11.1 Basic Syntax \u00b6 ipenrich [ -i IP_ADDRESS ] [ -a ASN ] [ --update-db ] [ --version ] [ -h ] 11.2 Available Flags \u00b6 Flag Description -i , --ip Enrich the given IP address. -a , --asn Lookup IP ranges for the given ASN. --update-db Force re-download of the DB. --version Show the installed version. -h , --help Show usage and help message. 11.3 Example Commands \u00b6 11.3.1 Enrich an IP Address \u00b6 ipenrich -i 8 .8.8.8 Returns: IP : 8.8.8.8 ASN : 15169 Owner : GOOGLE Country : US Type : public 11.3.2 Lookup ASN Information \u00b6 ipenrich -a 15169 Returns: ASN : 15169 Owner : GOOGLE Country : US IP Ranges: - 8.8.4.0 - 8.8.4.255 - 8.8.8.0 - 8.8.8.255 ... 11.3.3 Manually Update the Database \u00b6 ipenrich --update-db Downloads the latest IP-to-ASN dataset and replaces the local cache. 11.3.4 Show Current Version \u00b6 ipenrich --version Prints the installed version of ipenrich . 11.4 Database Management \u00b6 11.4.1 Offline Usage \u00b6 The tool uses a local database ( ip2asn-v4.tsv ) fetched from iptoasn.com , enabling fully offline lookups after the initial download. 11.4.2 Auto-Download Behavior \u00b6 When ipenrich is used for the first time, it automatically downloads the latest IP-to-ASN dataset. If the local copy is older than 7 days , a prompt is shown to refresh. 11.4.3 Manual Refresh \u00b6 You can also force an update manually: ipenrich --update-db This will: Download the latest ip2asn-v4.tsv.gz Extract it Replace the outdated local copy 11.5 Programmatic Update (Advanced) \u00b6 For advanced use cases or library integration, update the database manually via code: from ipenrich.asn import download_ip2asn_db download_ip2asn_db () 11.6 Contribution & Support \u00b6 For issues, feature requests, or contributions: \ud83c\udf10 GitHub Repository","title":"CLI"},{"location":"cli/#cli","text":"ipenrich includes a built-in CLI tool that allows you to enrich IPs and fetch ASN data directly from the terminal.","title":"CLI"},{"location":"cli/#11-command-line-interface-cli","text":"","title":"11. Command Line Interface (CLI)"},{"location":"cli/#111-basic-syntax","text":"ipenrich [ -i IP_ADDRESS ] [ -a ASN ] [ --update-db ] [ --version ] [ -h ]","title":"11.1 Basic Syntax"},{"location":"cli/#112-available-flags","text":"Flag Description -i , --ip Enrich the given IP address. -a , --asn Lookup IP ranges for the given ASN. --update-db Force re-download of the DB. --version Show the installed version. -h , --help Show usage and help message.","title":"11.2 Available Flags"},{"location":"cli/#113-example-commands","text":"","title":"11.3 Example Commands"},{"location":"cli/#1131-enrich-an-ip-address","text":"ipenrich -i 8 .8.8.8 Returns: IP : 8.8.8.8 ASN : 15169 Owner : GOOGLE Country : US Type : public","title":"11.3.1 Enrich an IP Address"},{"location":"cli/#1132-lookup-asn-information","text":"ipenrich -a 15169 Returns: ASN : 15169 Owner : GOOGLE Country : US IP Ranges: - 8.8.4.0 - 8.8.4.255 - 8.8.8.0 - 8.8.8.255 ...","title":"11.3.2 Lookup ASN Information"},{"location":"cli/#1133-manually-update-the-database","text":"ipenrich --update-db Downloads the latest IP-to-ASN dataset and replaces the local cache.","title":"11.3.3 Manually Update the Database"},{"location":"cli/#1134-show-current-version","text":"ipenrich --version Prints the installed version of ipenrich .","title":"11.3.4 Show Current Version"},{"location":"cli/#114-database-management","text":"","title":"11.4 Database Management"},{"location":"cli/#1141-offline-usage","text":"The tool uses a local database ( ip2asn-v4.tsv ) fetched from iptoasn.com , enabling fully offline lookups after the initial download.","title":"11.4.1 Offline Usage"},{"location":"cli/#1142-auto-download-behavior","text":"When ipenrich is used for the first time, it automatically downloads the latest IP-to-ASN dataset. If the local copy is older than 7 days , a prompt is shown to refresh.","title":"11.4.2 Auto-Download Behavior"},{"location":"cli/#1143-manual-refresh","text":"You can also force an update manually: ipenrich --update-db This will: Download the latest ip2asn-v4.tsv.gz Extract it Replace the outdated local copy","title":"11.4.3 Manual Refresh"},{"location":"cli/#115-programmatic-update-advanced","text":"For advanced use cases or library integration, update the database manually via code: from ipenrich.asn import download_ip2asn_db download_ip2asn_db ()","title":"11.5 Programmatic Update (Advanced)"},{"location":"cli/#116-contribution-support","text":"For issues, feature requests, or contributions: \ud83c\udf10 GitHub Repository","title":"11.6 Contribution &amp; Support"},{"location":"update/","text":"Updating the Database \u00b6 ipenrich relies on a local copy of the IP-to-ASN database to provide fast and offline enrichment. This section describes how the database is managed and how you can update it manually or programmatically. 1. Why Update the Database? \u00b6 The IP-to-ASN mapping data changes frequently as networks evolve. Keeping the local database updated ensures that: Enrichment results are accurate New ASN allocations and IP ranges are recognized Country and ownership info remains current 2. One-Time Auto Download \u00b6 When you run any ipenrich command for the first time , it will automatically: Download the latest ip2asn-v4.tsv.gz file from iptoasn.com Extract and cache it locally for fast lookups No action is needed on your part during first use. 3. Manual Update (Recommended Weekly) \u00b6 You can manually refresh the database anytime using the CLI: 3.1 Command \u00b6 ipenrich --update-db 3.2 What It Does \u00b6 Downloads the latest compressed TSV file Extracts and stores it in the local cache directory Overwrites the previous database copy 4. Auto-Refresh Logic \u00b6 On every usage, ipenrich checks: If the local database exists If the file is older than 7 days If the data is outdated, a warning will be printed suggesting you to run: ipenrich --update-db This helps you stay current without automatic background downloads. 5. Programmatic Update (Advanced) \u00b6 You can also trigger a database update from Python code. 5.1 Code Snippet \u00b6 from ipenrich.asn import download_ip2asn_db download_ip2asn_db () This is useful when integrating into scripts or scheduled jobs (e.g., cron). 6. Where is the DB Stored? \u00b6 The database is stored locally in a cache directory like: ~/.cache/ipenrich/ip2asn-v4.tsv You do not need to manage this path manually unless doing advanced customizations. 7. Troubleshooting \u00b6 If download fails, check your internet connection. You can delete the cache file to force a fresh download. If ipenrich doesn't recognize an IP, it's possible the DB is outdated \u2014 try updating it. 8. Source of Data \u00b6 The IP-to-ASN data is freely provided by: \ud83c\udf10 iptoasn.com It is redistributed and used locally for enrichment, with no external calls after download.","title":"Updating the Database"},{"location":"update/#updating-the-database","text":"ipenrich relies on a local copy of the IP-to-ASN database to provide fast and offline enrichment. This section describes how the database is managed and how you can update it manually or programmatically.","title":"Updating the Database"},{"location":"update/#1-why-update-the-database","text":"The IP-to-ASN mapping data changes frequently as networks evolve. Keeping the local database updated ensures that: Enrichment results are accurate New ASN allocations and IP ranges are recognized Country and ownership info remains current","title":"1. Why Update the Database?"},{"location":"update/#2-one-time-auto-download","text":"When you run any ipenrich command for the first time , it will automatically: Download the latest ip2asn-v4.tsv.gz file from iptoasn.com Extract and cache it locally for fast lookups No action is needed on your part during first use.","title":"2. One-Time Auto Download"},{"location":"update/#3-manual-update-recommended-weekly","text":"You can manually refresh the database anytime using the CLI:","title":"3. Manual Update (Recommended Weekly)"},{"location":"update/#31-command","text":"ipenrich --update-db","title":"3.1 Command"},{"location":"update/#32-what-it-does","text":"Downloads the latest compressed TSV file Extracts and stores it in the local cache directory Overwrites the previous database copy","title":"3.2 What It Does"},{"location":"update/#4-auto-refresh-logic","text":"On every usage, ipenrich checks: If the local database exists If the file is older than 7 days If the data is outdated, a warning will be printed suggesting you to run: ipenrich --update-db This helps you stay current without automatic background downloads.","title":"4. Auto-Refresh Logic"},{"location":"update/#5-programmatic-update-advanced","text":"You can also trigger a database update from Python code.","title":"5. Programmatic Update (Advanced)"},{"location":"update/#51-code-snippet","text":"from ipenrich.asn import download_ip2asn_db download_ip2asn_db () This is useful when integrating into scripts or scheduled jobs (e.g., cron).","title":"5.1 Code Snippet"},{"location":"update/#6-where-is-the-db-stored","text":"The database is stored locally in a cache directory like: ~/.cache/ipenrich/ip2asn-v4.tsv You do not need to manage this path manually unless doing advanced customizations.","title":"6. Where is the DB Stored?"},{"location":"update/#7-troubleshooting","text":"If download fails, check your internet connection. You can delete the cache file to force a fresh download. If ipenrich doesn't recognize an IP, it's possible the DB is outdated \u2014 try updating it.","title":"7. Troubleshooting"},{"location":"update/#8-source-of-data","text":"The IP-to-ASN data is freely provided by: \ud83c\udf10 iptoasn.com It is redistributed and used locally for enrichment, with no external calls after download.","title":"8. Source of Data"}]}